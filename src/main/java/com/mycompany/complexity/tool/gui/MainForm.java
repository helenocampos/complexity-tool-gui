package com.mycompany.complexity.tool.gui;


import com.github.javaparser.JavaParser;
import com.github.javaparser.ParseException;
import com.github.javaparser.ast.CompilationUnit;
import com.github.javaparser.ast.body.MethodDeclaration;
import com.github.javaparser.ast.visitor.VoidVisitorAdapter;
import com.mycompany.complexity.tool.mvn.App;
import com.mycompany.complexity.tool.mvn.GraphAnalysis;
import com.mycompany.complexity.tool.mvn.Path;
import com.mycompany.complexity.tool.mvn.Renderer;
import java.awt.event.ItemEvent;
import java.awt.event.ItemListener;
import java.io.File;
import java.io.IOException;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JFileChooser;
import java.awt.BorderLayout;
import javax.swing.table.DefaultTableModel;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
/**
 *
 * @author Heleno
 */
public class MainForm extends javax.swing.JFrame {

    /**
     * Creates new form JFileChooserDemo
     */
    public MainForm() {
        initComponents();
        methods = new ArrayList<>();
    }

    private ArrayList<CustomComboBoxItem> methods;

    private CompilationUnit cu;

    private CustomComboBoxItem activeItem;

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        fileChooser = new javax.swing.JFileChooser();
        jLabel1 = new javax.swing.JLabel();
        className = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        metodos = new javax.swing.JComboBox();
        jLabel3 = new javax.swing.JLabel();
        paths = new javax.swing.JComboBox();
        jPanel3 = new javax.swing.JPanel();
        graphArea = new javax.swing.JPanel();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        scrollPane = new javax.swing.JScrollPane();
        codeArea = new javax.swing.JTextArea();
        jPanel1 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        pathText = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        predicatesTable = new javax.swing.JTable();
        jLabel5 = new javax.swing.JLabel();
        complexidade = new javax.swing.JLabel();
        selectedNode = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        selectedCodeArea = new javax.swing.JTextArea();
        jLabel6 = new javax.swing.JLabel();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        Exit = new javax.swing.JMenuItem();
        Open = new javax.swing.JMenuItem();

        fileChooser.setDialogTitle("Open dialog");
        fileChooser.setFileFilter(new MyCustomFilter());

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Complexity Tool");
        setMinimumSize(new java.awt.Dimension(900, 800));

        jLabel1.setText("Classe selecionada:");

        jLabel2.setText("Método:");

        metodos.setModel(new DefaultComboBoxModel());
        metodos.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                metodosItemStateChanged(evt);
            }
        });

        jLabel3.setText("Caminho:");

        paths.setModel(new DefaultComboBoxModel());
        paths.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pathsActionPerformed(evt);
            }
        });

        jPanel3.setMinimumSize(new java.awt.Dimension(800, 750));
        jPanel3.setPreferredSize(new java.awt.Dimension(800, 750));
        jPanel3.setLayout(new java.awt.GridLayout(1, 2));

        graphArea.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        graphArea.setMinimumSize(new java.awt.Dimension(400, 700));
        graphArea.setPreferredSize(new java.awt.Dimension(400, 700));
        graphArea.setLayout(new java.awt.BorderLayout());
        jPanel3.add(graphArea);

        scrollPane.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_ALWAYS);
        scrollPane.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_ALWAYS);
        scrollPane.setAutoscrolls(true);
        scrollPane.setMinimumSize(new java.awt.Dimension(400, 700));
        scrollPane.setPreferredSize(new java.awt.Dimension(400, 700));

        codeArea.setEditable(false);
        codeArea.setColumns(20);
        codeArea.setRows(5);
        codeArea.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        codeArea.setRequestFocusEnabled(false);
        scrollPane.setViewportView(codeArea);

        jTabbedPane1.addTab("Código", scrollPane);

        jLabel4.setText("Caminho");

        predicatesTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Predicado", "Condição", "Valor"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        predicatesTable.getTableHeader().setReorderingAllowed(false);
        jScrollPane2.setViewportView(predicatesTable);
        if (predicatesTable.getColumnModel().getColumnCount() > 0) {
            predicatesTable.getColumnModel().getColumn(0).setMinWidth(70);
            predicatesTable.getColumnModel().getColumn(0).setPreferredWidth(70);
            predicatesTable.getColumnModel().getColumn(0).setMaxWidth(70);
            predicatesTable.getColumnModel().getColumn(2).setMinWidth(65);
            predicatesTable.getColumnModel().getColumn(2).setPreferredWidth(65);
            predicatesTable.getColumnModel().getColumn(2).setMaxWidth(65);
        }

        jLabel5.setText("Complexidade Ciclomática:");

        selectedCodeArea.setEditable(false);
        selectedCodeArea.setColumns(20);
        selectedCodeArea.setLineWrap(true);
        selectedCodeArea.setRows(5);
        jScrollPane3.setViewportView(selectedCodeArea);

        jLabel6.setText("Código do nó selecionado");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(pathText))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(complexidade))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jScrollPane3)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 372, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(selectedNode))
                    .addComponent(jLabel6))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(complexidade))
                .addGap(3, 3, 3)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(pathText))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 242, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 7, Short.MAX_VALUE)
                .addComponent(jLabel6)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(selectedNode)
                        .addGap(393, 393, 393))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 484, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())))
        );

        jTabbedPane1.addTab("Análise", jPanel1);

        jMenu1.setText("File");

        Exit.setText("Open");
        Exit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ExitActionPerformed(evt);
            }
        });
        jMenu1.add(Exit);

        Open.setText("Exit");
        Open.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                OpenActionPerformed(evt);
            }
        });
        jMenu1.add(Open);

        jMenuBar1.add(jMenu1);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 400, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(metodos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(95, 95, 95)
                                .addComponent(jLabel3))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(className)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(paths, javax.swing.GroupLayout.PREFERRED_SIZE, 387, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(className))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(metodos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3)
                    .addComponent(paths, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void pathsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pathsActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_pathsActionPerformed

    private void metodosItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_metodosItemStateChanged
        // TODO add your handling code here:
    }//GEN-LAST:event_metodosItemStateChanged

    private void OpenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_OpenActionPerformed
        System.exit(0);
    }//GEN-LAST:event_OpenActionPerformed

    private void ExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ExitActionPerformed
        fileChooser.setAcceptAllFileFilterUsed(false);
        int returnVal = fileChooser.showOpenDialog(this);
        if (returnVal == JFileChooser.APPROVE_OPTION) {
            File file = fileChooser.getSelectedFile();
            try {

                metodos.removeAllItems();

                cu = JavaParser.parse(file);
                className.setText(file.getName());
                metodos.addItemListener(new ItemChangeListener());
                paths.addItemListener(new ItemChangeListener());
                new MethodVisitor().visit(cu, null);

            } catch (IOException ex) {
                System.out.println("problem accessing file" + file.getAbsolutePath());
            } catch (ParseException ex) {
                Logger.getLogger(MainForm.class.getName()).log(Level.SEVERE, null, ex);
            }
        } else {
            System.out.println("File access cancelled by user.");
        }
    }//GEN-LAST:event_ExitActionPerformed
    
    class ItemChangeListener implements ItemListener {

        @Override
        public void itemStateChanged(ItemEvent event) {

            if (event.getStateChange() == ItemEvent.SELECTED) {
                if (event.getSource().equals(metodos)) {
                    if (metodos.getItemCount() > 0) {
                        CustomComboBoxItem item = (CustomComboBoxItem) event.getItem();
                        activeItem = item;
                        App app = item.getApp();
                        codeArea.setText(app.getCode());

                        TextLineNumber tln = new TextLineNumber(codeArea);
                        scrollPane.setRowHeaderView(tln);

                        updateGraphArea(app.getRenderer());
                        GraphAnalysis analysis = app.getAnalysis();

                        paths.removeAllItems();

                        analysis.getPaths().stream().forEach((path) -> {
                            paths.addItem(path);
                        });

                        complexidade.setText(Integer.toString(paths.getItemCount()));
                    }

                } else if (event.getSource().equals(paths)) {
                    if (paths.getItemCount() > 0) {
                        Path path = (Path) event.getItem();
                        if (path != null) {
                            pathText.setText(path.getPathString());
                            DefaultTableModel tableModel = (DefaultTableModel) predicatesTable.getModel();
                            tableModel.setRowCount(0);
                            String[][] predicateData = path.getPredicateData();
                            for (String[] data : predicateData) {
                                tableModel.addRow(data);
                            }

                            activeItem.getApp().getRenderer().fillPath(path.getNodes());
                            updateGraphArea(activeItem.getApp().getRenderer());
                        }

                    }
                }
            }

        }
    }

    private void updateGraphArea(Renderer renderer) {
        graphArea.removeAll();
        graphArea.add(renderer.getVisualizationViewer(), BorderLayout.CENTER);
        graphArea.revalidate();
        graphArea.repaint();
        graphArea.requestFocus();
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;

                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainForm.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainForm.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainForm.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainForm.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainForm().setVisible(true);

            }
        });

    }

    private class MethodVisitor extends VoidVisitorAdapter {

        @Override
        public void visit(MethodDeclaration n, Object arg) {
            CustomComboBoxItem item = new CustomComboBoxItem(n, codeArea, selectedCodeArea);
            metodos.addItem(item);
            methods.add(item);
        }
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuItem Exit;
    private javax.swing.JMenuItem Open;
    private javax.swing.JLabel className;
    private javax.swing.JTextArea codeArea;
    private javax.swing.JLabel complexidade;
    private javax.swing.JFileChooser fileChooser;
    private javax.swing.JPanel graphArea;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JComboBox metodos;
    private javax.swing.JLabel pathText;
    private javax.swing.JComboBox paths;
    private javax.swing.JTable predicatesTable;
    private javax.swing.JScrollPane scrollPane;
    private javax.swing.JTextArea selectedCodeArea;
    private javax.swing.JLabel selectedNode;
    // End of variables declaration//GEN-END:variables
}
